"use client";
import { __rest, __assign } from '../_virtual/_tslib.js';
import { Root as Root$1, Indicator as Indicator$1 } from '../external/@radix-ui/react-progress/dist/index.js';
import classNames from '../external/classnames/index.js';
import React__default from 'react';
import styles from './progress.module.css.js';

var DEFAULT_PROGRESS_VALUE = 0;
var ProgressContext = React__default.createContext(DEFAULT_PROGRESS_VALUE);
var Root = React__default.forwardRef(function ProgressRoot(_a, ref) {
    _a.className; var children = _a.children, value = _a.value, otherProps = __rest(_a, ["className", "children", "value"]);
    return (React__default.createElement(ProgressContext.Provider, { value: value || DEFAULT_PROGRESS_VALUE },
        React__default.createElement(Root$1, __assign({ ref: ref }, otherProps, { value: value }), children)));
});
var Indicator = React__default.forwardRef(function Indicator(_a, ref) {
    var className = _a.className, otherProps = __rest(_a, ["className"]);
    var progress = React__default.useContext(ProgressContext);
    return (React__default.createElement(Indicator$1, __assign({ className: classNames(className, styles.indicator), ref: ref, asChild: true, style: { transform: "translateX(-".concat(100 - progress, "%)") } }, otherProps)));
});
var Progress = { Root: Root, Indicator: Indicator };

export { Indicator, Progress, Root };
