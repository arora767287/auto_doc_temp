"use client";
import { __rest, __assign } from '../_virtual/_tslib.js';
import { Root as Root2, Trigger as Trigger$1, Value as Value$1, Portal, Content as Content2, Viewport as Viewport$1, Item as Item$1, ItemText as ItemText$1 } from '../packages/subframe-core/external/@radix-ui/react-select/dist/index.js';
import classNames from '../external/classnames/index.js';
import React__default from 'react';
import styles from './select.module.css.js';

var Root = React__default.forwardRef(function SelectRoot(_a, _ref) {
    var children = _a.children, otherProps = __rest(_a, ["children"]);
    return React__default.createElement(Root2, __assign({}, otherProps), children);
});
var Trigger = React__default.forwardRef(function Trigger(_a, ref) {
    var className = _a.className, children = _a.children, otherProps = __rest(_a, ["className", "children"]);
    return (React__default.createElement(Trigger$1, __assign({ className: classNames(className, styles.trigger), ref: ref }, otherProps), children));
});
var Value = React__default.forwardRef(function Value(_a, ref) {
    _a.children; // NOTE: ignored
    var placeholder = _a.placeholder, className = _a.className, otherProps = __rest(_a, ["children", "placeholder", "className"]);
    return (
    // NOTE: this needs a wrapper since Radix strips all styling from RadixSelect.Value
    React__default.createElement("span", __assign({ className: classNames(className, styles.value) }, otherProps, { ref: ref }),
        React__default.createElement(Value$1, { placeholder: placeholder })));
});
var Content = React__default.forwardRef(function Content(_a, ref) {
    var className = _a.className, children = _a.children, _b = _a.position, position = _b === void 0 ? "popper" : _b, _c = _a.sideOffset, sideOffset = _c === void 0 ? 4 : _c, otherProps = __rest(_a, ["className", "children", "position", "sideOffset"]);
    return (React__default.createElement(Portal, null,
        React__default.createElement(Content2, __assign({ className: classNames(className, styles.content), ref: ref, position: position, sideOffset: sideOffset }, otherProps),
            React__default.createElement(Select.Viewport, { asChild: true }, children))));
});
var Viewport = React__default.forwardRef(function Viewport(_a, ref) {
    var className = _a.className, children = _a.children, otherProps = __rest(_a, ["className", "children"]);
    return (React__default.createElement(Viewport$1, __assign({ className: classNames(className, styles.viewport), ref: ref }, otherProps), children));
});
var Item = React__default.forwardRef(function Item(_a, ref) {
    var className = _a.className, children = _a.children, value = _a.value, otherProps = __rest(_a, ["className", "children", "value"]);
    return (React__default.createElement(Item$1, __assign({ className: classNames(className, styles.item), ref: ref, value: value }, otherProps), children));
});
var ItemText = ItemText$1;
var Select = {
    Root: Root,
    Trigger: Trigger,
    Value: Value,
    Content: Content,
    Viewport: Viewport,
    Item: Item,
    ItemText: ItemText,
};

export { Content, Item, ItemText, Root, Select, Trigger, Value, Viewport };
